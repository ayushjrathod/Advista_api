[
    {
        "title": "Das Keyboard - The Ultimate Mechanical Keyboard Experience for ...",
        "link": "https://www.daskeyboard.com/",
        "snippet": "Das Keyboard offers the ultimate experience with high-performance mechanical keyboards with superior durability, construction, and design.",
        "readable_content": " Introducing \n Introducing \n Introducing \nDas Keyboard 5QS - The Smart RGB Mechanical Keyboard\nUber quality, uber design\nAn experience like no other\n We make ultimate products for ultimate customers. We are quality obsessed and develop all our products with premium materials.  Learn more \n All of our keyboards are designed with high-performance, gold-plated mechanical key switches. Learn more about the different switches Das Keyboard offers.  Learn more \nA mechanical keyboard is a high-performance keyboard with tactile and audio feedback so accurate it allows you to execute every keystroke with lightning-fast precision. Because of the durability and construction of the switches, mechanical keyboards are built to last far longer than standard keyboards. Read our mechanical keyboard guide to learn more about what makes a mechanical keyboard awesome. Your fingers will be thanking you.\nWhere to buy\n*Shipping\n**Guarantee\nEducation program\nCorporate Sales\nBecome a reseller\nDestroy this site\nPrivacy policy\nDo not sell my personal information\nMechanical keyboard guide\nDevelop applet\nPress kit and media contact\nSwitch comparison\nBlog\nContact us & support\nDas Keyboard story\nType faster\nProfessional reviews\nUnauthorized dealer warning\nDas Keyboard Status Page\nDas Keyboard affiliate program",
        "reddit_data": null
    },
    {
        "title": "Keyboard - Amazon.com",
        "link": "https://www.amazon.com/keyboard/s?k=keyboard",
        "snippet": "Shop by Brand · Results · Logitech MK270 Wireless Keyboard And Mouse Combo For Windows, 2.4 GHz Wireless, Compact Mouse, 8 Multimedia And Shortcut Keys, For PC, ...",
        "readable_content": null,
        "reddit_data": null
    },
    {
        "title": "Keyboard Accessibility - WebAIM",
        "link": "https://webaim.org/techniques/keyboard/",
        "snippet": "Sep 26, 2022 ... A keyboard user typically uses the Tab key to navigate through interactive elements on a web page—links, buttons, fields for inputting text, etc ...",
        "readable_content": "Search: \nIntroduction to Web Accessibility\nWebAIM Training\nYou are here: Home > Articles > Keyboard Accessibility\nThe experts at WebAIM can audit your web site and provide a detailed report to help you remediate accessibility and WCAG compliance issues.\nLearn more about WebAIM Evaluation Services\n\nEnsure that all content can be accessed with the keyboard alone.\nKeyboard accessibility is one of the most important aspects of web accessibility. Many users with motor disabilities rely on a keyboard. Some people have tremors which don't allow for fine muscle control. Others have little or no use of their hands, or no hands at all. In addition to traditional keyboards, some users may use modified keyboards or other hardware that mimics the functionality of a keyboard. Blind users also typically use a keyboard for navigation. Users without disabilities may use a keyboard for navigation because of preference or efficiency.\nThere are many ways that a webpage can introduce difficulties for users who rely on a keyboard for navigation. Below are a few of the most common issues.\nA keyboard user typically uses the Tab key to navigate through interactive elements on a web page—links, buttons, fields for inputting text, etc. When an item is tabbed to, it has keyboard \"focus\" and can be activated or manipulated with the keyboard. A sighted keyboard user must be provided with a visual indicator of the element that currently has keyboard focus. Focus indicators are provided automatically by web browsers. While their appearance varies based on the browser, the focus indicator is typically shown as a border or highlight (called an outline) around the focused element. These outlines can be hidden by applying outline:0 or outline:none CSS to focusable elements.\nAvoid outline:0 or outline:none or other styles that remove or limit visibility of keyboard focus indicators.\nIn addition to the default outline, you can use CSS to make the focus indicator more visually apparent and keyboard-friendly by ensuring the focus indicator is highly visible with sufficient contrast, and by adding a background color or other visual focus style to links and other interactive controls. The outline can be styled to match your site design but should be readily detected when navigating with the Tab key.\nAs a keyboard user navigates through the page, the order in which interactive items receive keyboard focus is important. The default keyboard navigation order must be logical and intuitive. This generally means that it follows the visual flow of the page—left to right, top to bottom. For most pages this means header first, then main navigation, then page navigation (if present), and finally the footer. This navigation order (and also the reading order for screen readers) is determined by the web page's source code. For best results:\nLinks, buttons, and form controls are natively accessible to keyboard users, so should be used for interactivity whenever possible. Page elements that are not interactive to mouse or touch users should not be made keyboard focusable (such as by using tabindex). Making non-interactive elements keyboard navigable will cause confusion.\nNote: An <a> element is only keyboard accessible or presented to screen reader users as a link when it has a non-empty href attribute. <a> (without an href attribute) or <a href=\"\"> (no href attribute value) should not be used for links.\nIf a native HTML element is not sufficient, then a custom-made control or widget might be necessary. All custom controls must still be accessible to keyboard users. You may need to use tabindex=\"0\" to ensure an element can receive keyboard focus. ARIA may also be necessary to ensure that the control or widget is presented correctly to screen reader users. The ARIA Authoring Practices outlines necessary keyboard interactions and ARIA coding necessary for many types of custom widgets. To be made highly accessible the following must occur:\nSighted mouse users are able to visually scan a web page and directly click on any item. Keyboard users must press the Tab key or other navigation keys to navigate through the interactive elements that precede the item the user wants to activate. Tabbing through lengthy navigation may be particularly demanding for users with motor disabilities.\nLong lists of links or other navigable items may pose a burden for keyboard-only users. The following best practices can facilitate efficient keyboard navigation:\nTesting with a keyboard is an essential part of any accessibility evaluation.\nThe following table includes many of the most common online interactions, the standard keystrokes for the interaction, and additional information on things to consider during testing.\nThe space bar will, by default, scroll the page, but only if an interactive control that allows space bar input is not focused. Horizontal scrolling within the page should be minimized.\nThe ARIA authoring practices document provides additional information for these and other common interactions. Be sure to test keyboard accessibility on mobile devices—users with disabilities often utilize an external keyboard with phones and tablets.\nInstitute for Disability Research, Policy, and Practice\n\t\t\tUtah State University\n\t\t\t6807 Old Main Hill\n\t\t\tLogan, UT 84322-6807\n435.797.7024",
        "reddit_data": null
    },
    {
        "title": "Shop Amazon.com | Keyboards & MIDIs",
        "link": "https://www.amazon.com/Keyboards-Products-Musical-Instruments/b?ie=UTF8&node=11969981",
        "snippet": "Welcome to the Keyboards & MIDIs Store, where you'll find great prices on a wide range of different keyboards & midis.",
        "readable_content": null,
        "reddit_data": null
    },
    {
        "title": "Mechanical Keyboards",
        "link": "https://mechanicalkeyboards.com/",
        "snippet": "Shop keyboards by size, full-size keyboards, Ducky Strawberry Frog TKL with light pink background, TKL Keyboards, 75% Keyboards, Varmilo x MK Glintstone Minilo ...",
        "readable_content": "Free shipping on continental US orders over $99\n• Estimated dates are subject to change• Pre-orders are filled on a first come, first serve basis• Pre-orders can be refunded in full prior to fulfillment• Please notify MK of any shipping address changes prior to fulfillmentLearn More\n•  Estimated dates are subject to delays and can change•  Group buys are filled on a first-come, first-served basis•  Your payment will be processed immediately upon checkout•  Group buys are non-refundable and cannot be cancelled•  Please notify MK of any shipping address changes prior to fulfillmentLearn More\n\n                3 different versions of great quality with a great price!\n              \n\n                Sort 'em and stack 'em to keep you organized as you work on your next masterpiece!\n              \nUpgrade your setup with the latest in keycaps, cables, wrist rests, and more\nClicky switches provide the most tactility and make an audible 'click' when typing.  Clicky switches are typically preferred by typists, but are noticeably louder than other mechanical switches. Use with caution near noise sensitive co-workers or spouses :)\nPopular with gamers and quiet typists, linear switches have no bump before bottoming out. They travel smoothly and increase in resistance as you reach the end of the key press. Because they have no bump, these are often some of the quietest switches.\nAbout halfway between linear and clicky switches, tactile switches have a (sometimes subtle) bump you can feel in the key press before bottoming out.  While this bump traditionally represented the actuation point, recent switches have actuation points and tactile bumps all along the travel distance. \n\n                    Questions? Call us 9am - 4pm CST:\n\n+1 615 551 2465\n\nYour cart is empty\n\n\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t$0.00 USD\n\t\t\t\t\t\t",
        "reddit_data": null
    },
    {
        "title": "Gboard - the Google Keyboard - Apps on Google Play",
        "link": "https://play.google.com/store/apps/details?id=com.google.android.inputmethod.latin&hl=en_US",
        "snippet": "About this app · Glide Typing — Type faster by sliding your finger from letter to letter · Voice typing — Easily dictate text on the go · Handwriting* — Write ...",
        "readable_content": "Play Pass\nPlay Points\nGift cards\nRedeem\nRefund policy\nParent Guide\nFamily sharing\nTerms of Service\nPrivacy\nAbout Google Play\nDevelopers\nGoogle Store",
        "reddit_data": null
    },
    {
        "title": "Computer Keyboards: PC Keyboards - Best Buy",
        "link": "https://www.bestbuy.com/site/mice-keyboards/computer-keyboards/abcat0513004.c?id=abcat0513004",
        "snippet": "Shop Best Buy for computer keyboards. Browse our large selection of PC keyboards that are compatible with Mac and Windows computers from popular brands.",
        "readable_content": null,
        "reddit_data": null
    },
    {
        "title": "Buy Mac Accessories - Apple",
        "link": "https://www.apple.com/shop/mac/accessories",
        "snippet": "Apple Magic Keyboard, Magic Mouse 2, Magic Trackpad 2. Redesigned to be fully rechargeable and even more of a joy to use.",
        "readable_content": "\nShop Charging Essentials\n\n\n          Protect your Mac\n        \n\n          Get accidental damage protection and expert technical support from Apple.\n        \n\n Learn more\n\nDiscover the perfect accessories.\nEnjoy two-hour delivery from an Apple Store, free delivery, or easy pickup.\nLearn more Fast, free delivery\nComplete your return online or take it to an Apple Store.\n\nLearn moreFree and easy returns\nGet 3% Daily Cash back when you shop at Apple with Apple Card. \n\nLearn moreShop with Apple Card.\nTo access and use all Apple Card features and products available only to Apple Card users, you must add Apple Card to Wallet on an iPhone or iPad that supports and has the latest version of iOS or iPadOS. Apple Card is subject to credit approval, available only for qualifying applicants in the United States, and issued by Goldman Sachs Bank USA, Salt Lake City Branch.\nApple Payments Services LLC, a subsidiary of Apple Inc., is a service provider of Goldman Sachs Bank USA for Apple Card and Savings accounts. Neither Apple Inc. nor Apple Payments Services LLC is a bank.\nIf you reside in the U.S. territories, please call Goldman Sachs at 877-255-5923 with questions about Apple Card.\n \nTo access and use all Apple Card features and products available only to Apple Card users, you must add Apple Card to Wallet on an iPhone or iPad that supports and has the latest version of iOS or iPadOS. Apple Card is subject to credit approval, available only for qualifying applicants in the United States, and issued by Goldman Sachs Bank USA, Salt Lake City Branch.\nApple Payments Services LLC, a subsidiary of Apple Inc., is a service provider of Goldman Sachs Bank USA for Apple Card and Savings accounts. Neither Apple Inc. nor Apple Payments Services LLC is a bank.\nIf you reside in the U.S. territories, please call Goldman Sachs at 877-255-5923 with questions about Apple Card.\nWe approximate your location from your internet IP address by matching it to a geographic region or from the location entered during your previous visit to Apple.\nMore ways to shop: Find an Apple Store or other retailer near you. Or call 1‑800‑MY‑APPLE.",
        "reddit_data": null
    },
    {
        "title": "Understanding Success Criterion 2.1.1: Keyboard | WAI | W3C",
        "link": "https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html",
        "snippet": "All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the ...",
        "readable_content": "All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes, except where the underlying\n      function requires input that depends on the path of the user's movement and not just\n      the endpoints.\n   \nNote\nThis exception relates to the underlying function, not the input technique. For example,\n      if using handwriting to enter text, the input technique (handwriting) requires path-dependent\n      input but the underlying function (text input) does not.\n   \nNote\nThis does not forbid and should not discourage providing mouse input or other input\n      methods in addition to keyboard operation.\n   \nThe intent of this Success Criterion is to ensure that, wherever possible, content\n         can be operated through a keyboard or keyboard interface (so an alternate keyboard\n         can be used). When content can be operated through a keyboard or alternate keyboard,\n         it is operable by people with no vision (who cannot use devices such as mice that\n         require eye-hand coordination) as well as by people who must use alternate keyboards\n         or input devices that act as keyboard emulators. Keyboard emulators include speech\n         input software, sip-and-puff software, on-screen keyboards, scanning software and\n         a variety of assistive technologies and alternate keyboards. Individuals with low\n         vision also may have trouble tracking a pointer and find the use of software much\n         easier (or only possible) if they can control it from the keyboard.\n      \nExamples of \"specific timings for individual keystrokes\" include situations where\n         a user would be required to repeat or execute multiple keystrokes within a short period\n         of time or where a key must be held down for an extended period before the keystroke\n         is registered. \n         \n      \nThe phrase \"except where the underlying function requires input that depends on the\n         path of the user's movement and not just the endpoints\" is included to separate those\n         things that cannot reasonably be controlled from a keyboard.\n      \nMost actions carried out by a pointing device can also be done from the keyboard (for\n         example, clicking, selecting, moving, sizing). However, there is a small class of\n         input that is done with a pointing device that cannot be done from the keyboard in\n         any known fashion without requiring an inordinate number of keystrokes. Free hand\n         drawing, or watercolor painting require path dependent input. Drawing straight lines,\n         regular geometric shapes, re-sizing windows and dragging objects to a location (when\n         the path to that location is not relevant) do not require path dependent input.\n         \n      \nThe use of MouseKeys would not satisfy this Success Criterion because it is not a\n         keyboard equivalent to the application; it is a mouse equivalent (i.e., it looks like\n         a mouse to the application).\n      \nIt is assumed that the design of user input features takes into account that operating\n         system keyboard accessibility features may be in use. For example, modifier key locking\n         may be turned on. Content continues to function in such an environment, not sending\n         events that would collide with the modifier key lock to produce unexpected results.\n         \n      \nNote\nPlatforms and user agents usually have conventions for how web content or\n            applications are controlled with a keyboard interface. If content does not follow\n            the platform/user agent conventions it may be difficult to use, as users will need\n            to learn different interaction methods. As a best practice, content\n            should follow the platform/user agent conventions. However, deviating from these\n            conventions does not fail the normative requirement of this Success Criterion.\n\n            For instance, buttons that have focus can generally be activated using both the\n            Enter key and the Space bar. If a custom button control\n            in a web application instead only reacts to Enter\n            (or even a completely custom key or key combination), this still\n            satisfies the requirements of this Success Criterion.\n         \nNote\nThis Success Criterion does not require that every visible control that can be activated\n            using a mouse or touch screen must also be focusable and actionable using the keyboard.\n            The normative requirement is only that there must be a way for keyboard interface users to perform\n            the same, or comparable, actions and to operate the content. Generally, the easiest way\n            to achieve this is to provide controls that can be operated with all possible input devices;\n            however, if a web application implements a separate mode of operation for keyboard interface users,\n            it will not fail the Success Criterion.\n         \n\n  Each numbered item in this section represents a technique or combination of techniques\n  that the WCAG Working Group deems sufficient for meeting this Success Criterion.\n  However, it is not necessary to use these particular techniques.\n  For information on using other techniques, see\n  Understanding Techniques for WCAG Success Criteria,\n  particularly the \"Other Techniques\" section.\n\nEnsuring keyboard control by using one of the following techniques.\n\nG90: Providing keyboard-triggered event handlers using one of the following techniques:     \n               \n\n  Although not required for conformance, the following additional techniques should be considered in order to make content more accessible.\n  Not all techniques can be used or would be effective in all situations.\n\n\n  The following are common mistakes that are considered failures of this Success Criterion by the WCAG Working Group.\n\nprocesses and outcomes achievable through user action\n   \ninterface used by software to obtain keystroke input\nNote\nA keyboard interface allows users to provide keystroke input to programs even if the\n        native technology does not contain a keyboard.\nExample\nA touchscreen PDA has a keyboard interface built into its operating system as well\n        as a connector for external keyboards. Applications on the PDA can use the interface\n        to obtain keyboard input either from an external keyboard or from other applications\n        that provide simulated keyboard output, such as handwriting interpreters or speech-to-text\n        applications with \"keyboard emulation\" functionality.\nNote\nOperation of the application (or parts of the application) through a keyboard-operated\n      mouse emulator, such as MouseKeys, does not qualify as operation through a keyboard\n      interface because operation of the program is through its pointing device interface,\n      not through its keyboard interface.\n   \nseries of user actions where each action is required in order to complete an activity\nExample\nSuccessful use of a series of Web pages on a shopping site requires users to view\n      alternative products, prices and offers, select products, submit an order, provide\n      shipping information and provide payment information.\n   \nExample\nAn account registration page requires successful completion of a Turing test before\n      the registration form can be accessed.\n   \n\n    The following are Test Rules\n    for certain aspects of this Success Criterion.\n    It is not necessary to use these particular Test Rules to check for conformance with WCAG, but they are defined and approved test methods.\n    For information on using Test Rules, see Understanding Test Rules for WCAG Success Criteria.\n  \nPlease share your ideas, suggestions, or comments via e-mail to the publicly-archived list public-agwg-comments@w3.org or via GitHub\nDate: Updated 27 August 2024.\nDeveloped by\nAccessibility Guidelines Working Group (AG WG) Participants\n      (Co-Chairs: Alastair Campbell, Charles Adams, Rachael Bradley Montgomery. W3C Staff Contact:\n      Michael Cooper).\n    \nThe content was developed as part of the\n      WAI-Core projects funded by U.S. Federal funds.\n      The user interface was designed by the Education and Outreach Working Group\n      (EOWG) with contributions from\n      Shadi Abou-Zahra, Steve Lee, and Shawn Lawton Henry as part of the\n      WAI-Guide project,\n      co-funded by the European Commission.\n    \nW3C Web Accessibility Initiative (WAI)\nStrategies, standards, and supporting resources to make the Web accessible to people with disabilities.\nCopyright © 2025 World Wide Web Consortium (W3C®). See Permission to Use WAI Material.",
        "reddit_data": null
    },
    {
        "title": "Mac keyboard shortcuts - Apple Support",
        "link": "https://support.apple.com/en-us/102650",
        "snippet": "6 days ago ... Sleep, log out, and shut down shortcuts · Power button: Press to turn on your Mac or wake it from sleep. · Option–Command–Power button · Control ...",
        "readable_content": "By pressing certain key combinations, you can take actions that normally require a mouse or trackpad. Every app can have its own shortcuts, and shortcuts that work in one app might not work in another.\nUsing keyboard shortcuts\nCut, copy, paste, and other common shortcuts\nSleep, log out, and shut down shortcuts\nFinder and system shortcuts\nText-editing shortcuts\nAccessibility shortcuts\nApp-specific shortcuts\nLearn more\nKeyboard shortcuts use one or more of these modifier keys, which in menus are abbreviated using symbols:\nFn (Function) or Globe\nControl (or Ctrl) ⌃\nOption (or Alt) ⌥\nShift ⇧\nCommand (or Cmd) ⌘\nTo use a shortcut, press and hold the modifier keys, then press the last key of the shortcut. For example, to use Command-C, press and hold the Command key, then the C key, then release both keys. (On keyboards made for Windows PCs, press the Alt key instead of Option, and the Ctrl key or Windows logo key instead of Command.)\nThe keys in the top row of many Apple keyboards have special symbols and functions, such as for brightness, Mission Control, and more. To use these keys as F1, F2, F3, or other standard function keys, combine them with the Fn key.\nCommand-X: Cut the selected item and copy it to the Clipboard.\nCommand-C: Copy the selected item to the Clipboard. This also works for files in the Finder.\nCommand-V: Paste the contents of the Clipboard into the current document or app. This also works for files in the Finder.\nCommand-Z: Undo the previous command. You can then press Shift-Command-Zto Redo, reversing the undo command. In some apps, you can undo and redo multiple commands.\nCommand-A: Select All items.\nCommand-F: Find items in a document or open a Find window.\nCommand-G: Find Again: Find the next occurrence of the item previously found. To find the previous occurrence, press Shift-Command-G.\nCommand-H: Hide the windows of the front app. To view the front app but hide all other apps, press Option-Command-H.\nCommand-M: Minimize the front window to the Dock. To minimize all windows of the front app, press Option-Command-M.\nCommand-O: Open the selected item, or open a dialog to select a file to open.\nCommand-P: Open a print dialog so that you can print the current document.\nCommand-S: Save the current document.\nCommand-T: Open a new tab.\nCommand-W: Close the front window. To close all windows of the app, press Option-Command-W.\nOption-Command-Esc: Force quit an app.\nCommand–Space bar: Show or hide the Spotlight search field. To perform a Spotlight search from a Finder window, press Command–Option–Space bar. (If you use multiple input sources to type in different languages, these shortcuts change input sources instead of showing Spotlight. Learn how to change a conflicting keyboard shortcut.)\nControl–Command–Space bar or Fn-E: Show the Character Viewer, from which you can choose emoji and other symbols.\nControl-Command-F: Use or stop using the app in full screen, if supported by the app.\nSpace bar: Use Quick Look to preview the selected item.\nCommand-Tab: Switch to the next most recently used app among your open apps. \nCommand–Grave accent (`): Switch between the windows of the app you're using. (The character on the second key varies by keyboard. It's generally the key above the Tab key and to the left of the number 1.)\nShift-Command-5: In macOS Mojave or later, take a screenshot or make a screen recording. Or use Shift-Command-3 or Shift-Command-4 for screenshots. Learn more about screenshots.\nShift-Command-N: Create a new empty folder in the Finder.\nControl-Command-N: Create a new folder that contains the currently selected items.\nCommand-Comma (,): Open settings (preferences) for the front app.\nYou might need to press and hold some of these shortcuts for slightly longer than other shortcuts. This helps you to avoid using them unintentionally.\nPower button: Press to turn on your Mac or wake it from sleep. Press and hold for 1.5 seconds to put your Mac to sleep.* Continue holding to force your Mac to turn off.\nOption–Command–Power button* or Option-Command-Media Eject: Put your Mac to sleep.\nControl–Shift–Power button* or Control-Shift-Media Eject: Put your displays to sleep.\nControl–Power button* or Control-Media Eject: Show a dialog asking whether you want to restart, sleep, or shut down.\nControl–Command–Power button:* Force your Mac to restart, without prompting to save any open and unsaved documents.\nControl-Command-Media Eject: Quit all apps, then restart your Mac. If any open documents have unsaved changes, you will be asked whether you want to save them.\nControl–Option–Command–Power button* or Control-option-Command-Media Eject: Quit all apps, then shut down your Mac. If any open documents have unsaved changes, you will be asked whether you want to save them.\nControl-Command-Q: Immediately lock your screen.\nShift-Command-Q: Log out of your macOS user account. You will be asked to confirm. To log out immediately without confirming, press Option-Shift-Command-Q.\nOption key while choosing Log Out, Shut Down, or Restart from the Apple menu : Complete the action without showing a confirmation dialog. \nCommand-D: Duplicate the selected files.\nCommand-E: Eject the selected disk or volume.\nCommand-F: Start a Spotlight search in the Finder window.\nCommand-I: Show the Get Info window for a selected file.\nCommand-R: (1) When an alias is selected in the Finder: show the original file for the selected alias. (2) In some apps, such as Calendar or Safari, refresh or reload the page. (3) In Software Update, check for software updates again.\nShift-Command-C: Open the Computer window.\nShift-Command-D: Open the desktop folder.\nShift-Command-F: Open the Recents window, showing all of the files you viewed or changed recently.\nShift-Command-G: Open a Go to Folder window.\nShift-Command-H: Open the Home folder of the current macOS user account.\nShift-Command-I: Open iCloud Drive.\nShift-Command-K: Open the Network window.\nOption-Command-L: Open the Downloads folder.\nShift-Command-N: Create a new folder.\nShift-Command-O: Open the Documents folder.\nShift-Command-P: Show or hide the Preview pane in Finder windows.\nShift-Command-R: Open the AirDrop window.\nShift-Command-T: Show or hide the tab bar in Finder windows. \nControl-Shift-Command-T: Add selected Finder item to the Dock (OS X Mavericks or later).\nControl-Shift: Press and hold while accessing the Dock to use or stop using Dock magnification.\nShift-Command-U: Open the Utilities folder.\nOption-Command-D: Show or hide the Dock. \nControl-Command-T: Add the selected item to the sidebar (OS X Mavericks or later).\nOption-Command-P: Hide or show the path bar in Finder windows.\nOption-Command-S: Hide or show the Sidebar in Finder windows.\nCommand–Slash (/): Hide or show the status bar in Finder windows.\nCommand-J: Show View Options.\nCommand-K: Open the Connect to Server window.\nControl-Command-A: Make an alias of the selected item.\nCommand-N: Open a new Finder window.\nOption-Command-N: Create a new Smart Folder.\nCommand-T: Show or hide the tab bar when a single tab is open in the current Finder window.\nOption-Command-T: Show or hide the toolbar when a single tab is open in the current Finder window.\nOption-Command-V: Move the files in the Clipboard from their original location to the current location.\nCommand-Y: Use Quick Look to preview the selected files.\nOption-Command-Y: View a Quick Look slideshow of the selected files.\nCommand-1: View the items in the Finder window as icons.\nCommand-2: View the items in a Finder window as a list.\nCommand-3: View the items in a Finder window in columns. \nCommand-4: View the items in a Finder window in a gallery.\nCommand–Left Bracket ([): Go to the previous folder.\nCommand–Right Bracket (]): Go to the next folder.\nCommand–Up Arrow: Open the folder that contains the current folder.\nControl–Command–Up Arrow: Open the folder that contains the current folder in a new window.\nCommand–Down Arrow: Open the selected item.\nRight Arrow: Open the selected folder. This works only when in list view.\nLeft Arrow: Close the selected folder. This works only when in list view.\nCommand-Delete: Move the selected item to the Trash.\nShift-Command-Delete: Empty the Trash.\nOption-Shift-Command-Delete: Empty the Trash without confirmation dialog.\nCommand–Brightness Down: Turn video mirroring on or off when your Mac is connected to more than one display.\nOption–Brightness Up: Open Displays preferences. This works with either Brightness key.\nControl–Brightness Up or Control–Brightness Down: Change the brightness of your external display, if supported by your display.\nOption–Shift–Brightness Up or Option–Shift–Brightness Down: Adjust the display brightness in smaller steps. Add the Control key to this shortcut to make the adjustment on your external display, if supported by your display.\nOption–Mission Control: Open Mission Control preferences.\nCommand–Mission Control or Fn-H: Show the desktop. \nControl–Down Arrow: Show all windows of the front app.\nOption–Volume Up: Open Sound preferences. This works with any of the volume keys.\nOption–Shift–Volume Up or Option–Shift–Volume Down: Adjust the sound volume in smaller steps.\nOption–Keyboard Brightness Up: Open Keyboard preferences. This works with either Keyboard Brightness key.\nOption–Shift–Keyboard Brightness Up or Option–Shift–Keyboard Brightness Down: Adjust the keyboard brightness in smaller steps.\nOption key while double-clicking: Open the item in a separate window, then close the original window.\nCommand key while double-clicking: Open a folder in a separate tab or window.\nCommand key while dragging to another volume: Move the dragged item to the other volume, instead of copying it. \nOption key while dragging: Copy the dragged item. The pointer changes while you drag the item.\nOption-Command while dragging: Make an alias of the dragged item. The pointer changes while you drag the item.\nOption-click a disclosure triangle: Open all folders within the selected folder. This works only when in list view.\nCommand-click a window title: See the folders that contain the current folder.\nCommand or Shift while selecting an item:Select multiple items in the Finder. \nFn-A: Show or hide the Dock.\nFn-C: Show or hide Control Center.\nFn-D: Start or stop dictation.\nFn-N: Show or hide Notification Center.\nFn-Shift-A: Show or hide Launchpad.\nFn-Fn: Open the Character Viewer.\nCommand + Command (press twice): Open or close Type to Siri.\nWindow-tiling shortcuts\nClick the Go menu in the Finder menu bar to see shortcuts for opening many commonly used folders, such as Applications, Documents, Downloads, Utilities, and iCloud Drive.\nThe behavior of these shortcuts may vary with the app you're using.\nCommand-B: Boldface the selected text, or turn boldfacing on or off. \nCommand-I: Italicize the selected text, or turn italics on or off.\nCommand-K: Add a web link.\nCommand-U: Underline the selected text, or turn underlining on or off.\nCommand-T: Show or hide the Fonts window.\nCommand-D: Select the Desktop folder from within an Open dialog or Save dialog.\nControl-Command-D: Show or hide the definition of the selected word.\nShift-Command-Colon (:): Show the Spelling and Grammar window.\nCommand-Semicolon (;): Find misspelled words in the document.\nOption-Delete: Delete the word to the left of the insertion point.\nControl-H: Delete the character to the left of the insertion point. Or use Delete.\nControl-D: Delete the character to the right of the insertion point. Or use Fn-Delete.\nFn-Delete: Forward delete on keyboards that don't have a Forward Delete   key. Or use Control-D.\nControl-K: Delete the text between the insertion point and the end of the line or paragraph.\nFn–Up Arrow: Page Up: Scroll up one page. \nFn–Down Arrow: Page Down: Scroll down one page.\nFn–Left Arrow:Home: Scroll to the beginning of a document.\nFn–Right Arrow: End: Scroll to the end of a document.\nCommand–Up Arrow: Move the insertion point to the beginning of the document.\nCommand–Down Arrow: Move the insertion point to the end of the document.\nCommand–Left Arrow: Move the insertion point to the beginning of the current line.\nCommand–Right Arrow: Move the insertion point to the end of the current line.\nOption–Left Arrow: Move the insertion point to the beginning of the previous word.\nOption–Right Arrow: Move the insertion point to the end of the next word.\nShift–Command–Up Arrow: Select the text between the insertion point and the beginning of the document.\nShift–Command–Down Arrow: Select the text between the insertion point and the end of the document.\nShift–Command–Left Arrow: Select the text between the insertion point and the beginning of the current line.\nShift–Command–Right Arrow: Select the text between the insertion point and the end of the current line.\nShift–Up Arrow: Extend text selection to the nearest character at the same horizontal location on the line above.\nShift–Down Arrow: Extend text selection to the nearest character at the same horizontal location on the line below.\nShift–Left Arrow: Extend text selection one character to the left.\nShift–Right Arrow: Extend text selection one character to the right.\nOption–Shift–Up Arrow: Extend text selection to the beginning of the current paragraph, then to the beginning of the following paragraph if pressed again.\nOption–Shift–Down Arrow: Extend text selection to the end of the current paragraph, then to the end of the following paragraph if pressed again.\nOption–Shift–Left Arrow: Extend text selection to the beginning of the current word, then to the beginning of the following word if pressed again.\nOption–Shift–Right Arrow: Extend text selection to the end of the current word, then to the end of the following word if pressed again.\nControl-A: Move to the beginning of the line or paragraph.\nControl-E: Move to the end of a line or paragraph.\nControl-F: Move one character forward.\nControl-B: Move one character backward.\nControl-L: Center the cursor or selection in the visible area.\nControl-P: Move up one line.\nControl-N: Move down one line.\nControl-O: Insert a new line after the insertion point.\nControl-T: Swap the character behind the insertion point with the character in front of the insertion point.\nCommand–Left Curly Bracket ({): Left align.\nCommand–Right Curly Bracket (}): Right align.\nShift–Command–Vertical bar (|): Center align.\nOption-Command-F: Go to the search field. \nOption-Command-T: Show or hide a toolbar in the app.\nOption-Command-C: Copy Style: Copy the formatting settings of the selected item to the Clipboard.\nOption-Command-V: Paste Style: Apply the copied style to the selected item.\nOption-Shift-Command-V: Paste and Match Style: Apply the style of the surrounding content to the item pasted within that content.\nOption-Command-I: Show or hide the inspector window.\nShift-Command-P:  Page setup: Show a window for selecting document settings.\nShift-Command-S: Show the Save As dialog, or duplicate the current document.\nShift–Command–Minus sign (-): Decrease the size of the selected item.\nShift–Command–Plus sign (+): Increase the size of the selected item. Command–Equal sign (=) performs the same function.\nShift–Command–Question mark (?): Open the Help menu.\nUse emoji and symbols\nTo use these vision shortcuts, first choose Apple menu  > System Settings (or System Preferences), then click Keyboard. Click Keyboard Shortcuts, select Accessibility on the left, then select “Invert colors” and \"Contrast\" on the right.\nControl-Option-Command-8: Invert colors.\nControl-Option-Command-Comma (,) and Control-Option-Command-Period (.): Reduce contrast and increase contrast.\nUse the following shortcuts to change keyboard focus. To use some of them, first choose Apple menu  > System Settings (or System Preferences), then click Keyboard. Click Keyboard Shortcuts, select Keyboard on the left, then select the shortcut to enable it.\nControl-F2 or Fn-Control-F2: Move focus to the menu bar. You can then use the arrow keys to navigate the menu, press Return to open a selected menu or choose a selected menu item, or type the menu item's name to jump to that item in the selected menu.\nControl-F3 or Fn-Control-F3: Move focus to the Dock.\nControl-F4 or Fn-Control-F4: Move focus to the active window or next window.\nControl-F5 or Fn-Control-F5: Move focus to the window toolbar.\nControl-F6 or Fn-Control-F6: Move focus to the floating window.\nControl-Shift-F6: Move focus to the previous panel.\nControl-F7 or Fn-Control-F7: Change the way Tab moves focus—between navigation of all controls on the screen, or only text boxes and lists.\nControl-F8 or Fn-Control-F8: Move focus to the status menu in the menu bar\nCommand–Grave accent (`): Activate the next open window in the front app.\nShift–Command–Grave accent (`): Activate the previous open window in the front app\nOption–Command–Grave accent (`): Move the focus to the window drawer.\nTab and Shift-Tab: Move to next control, move to previous control.\nControl-Tab: Move to the next control when a text field is selected.\nControl-Shift-Tab: Move to the previous grouping of controls.\nArrow keys: Move to the adjacent item in a list, tab group, or menu, or move sliders and adjusters (Up Arrow to increase values, Down Arrow to decrease values)\nControl–Arrow keys: Move to a control adjacent to the text field.\nOther accessibility shortcuts:\nOption-Command-F5 or triple-press Touch ID: Show the Accessibility Shortcuts panel.\nVoiceOver commands (when using VoiceOver, you might need to make VoiceOver ignore the next key press before you can use certain keyboard shortcuts)\nUse Mouse Keys to control the pointer with your keyboard\nUse a spoken command for a keyboard shortcut\nApple TV app shortcuts\nApp Store shortcuts\nCalendar shortcuts\nContacts shortcuts\nDisk Utility shortcuts\nFind My shortcuts\niMovie shortcuts\nKeynote shortcuts\nMail shortcuts\nMaps shortcuts\nMessages shortcuts\nMusic shortcuts\nNews shortcuts\nNotes shortcuts\nNumbers shortcuts\nPages shortcuts\nPhotos shortcuts\nPodcasts shortcuts\nReminders shortcuts\nPreview shortcuts\nSafari shortcuts\nSpotlight shortcuts\nTerminal shortcuts\nVoice Memos shortcuts\nCreate your own shortcuts\nChange the behavior of the function keys\nChange the behavior of the modifier keys\nMac startup key combinations\n* Does not apply to the Touch ID sensor.\n\n        Find what’s been asked and answered by Apple customers.\n      \n\n        Need more help? Save time by starting your support request online and we'll connect you to an expert.\n      ",
        "reddit_data": null
    }
]